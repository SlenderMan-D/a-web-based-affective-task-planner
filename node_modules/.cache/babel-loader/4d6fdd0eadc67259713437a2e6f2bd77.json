{"ast":null,"code":"var _jsxFileName = \"/home/daisy/computer project/taskPlanner/src/pages/User/Main/components/review/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Calendar } from 'antd';\nimport moment from 'moment';\nimport './index.css';\nconst colors = {\n  '-2': '#ff0000',\n  '-1': '#faad14',\n  '0': '#928d8d',\n  '1': '#84e284',\n  '2': '#008000'\n};\nconst feel = {\n  '-2': 'sad',\n  '-1': 'normal',\n  '0': 'no task finished',\n  '1': 'good',\n  '2': 'happy'\n};\n\nconst noop = ({\n  value\n}) => {\n  const current = value.clone();\n  const localeData = value.localeData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, localeData.monthsShort(current));\n};\n\nconst getDayTask = (day, taskList) => {\n  return taskList.filter(item => day.isSame(item.finshedTime, 'day'));\n};\n\nconst Review = () => {\n  const getMonthLit = () => {\n    const currentMonth = moment().month();\n    const pre1Month = moment().month(currentMonth - 1).startOf('month');\n    const pre2Month = moment().month(currentMonth - 2).startOf('month');\n    return [pre2Month, pre1Month, moment()];\n  };\n\n  const [taskList, setTaskList] = useState([]);\n  const [monthList, setMonthList] = useState(getMonthLit());\n  useEffect(() => {\n    axios.post('http://localhost:3232/api/task/queryByDate', {\n      status: 'done',\n      start: moment().month(moment().month() - 2).startOf('month').format('YYYY-MM-DD'),\n      end: moment().endOf('month').format('YYYY-MM-DD')\n    }).then(res => {\n      if (res.data.code === 200) {\n        setTaskList(res.data.data.list || []);\n      }\n    });\n  }, []);\n\n  function renderCell(date) {\n    const grade = getDayTask(date, taskList).reduce((total, current) => total + current.feel + moment(current.finshedTime).isBefore(current.endTime) ? 1 : -1, 0);\n    let color = colors[grade];\n\n    if (grade > 2) {\n      color = colors['2'];\n    } else if (grade < -2) {\n      color = colors['-2'];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-grade\",\n      style: {\n        backgroundColor: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, Object.keys(colors).map(key => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      backgroundColor: colors[key],\n      width: 20,\n      height: 20,\n      margin: '0 30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, feel[key])))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-calendar-demo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    fullscreen: false,\n    defaultValue: monthList[0],\n    dateFullCellRender: renderCell,\n    headerRender: noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    fullscreen: false,\n    defaultValue: monthList[1],\n    dateFullCellRender: renderCell,\n    headerRender: noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    fullscreen: false,\n    defaultValue: monthList[2],\n    dateFullCellRender: renderCell,\n    headerRender: noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Review;","map":{"version":3,"sources":["/home/daisy/computer project/taskPlanner/src/pages/User/Main/components/review/index.js"],"names":["React","useEffect","useState","axios","Calendar","moment","colors","feel","noop","value","current","clone","localeData","monthsShort","getDayTask","day","taskList","filter","item","isSame","finshedTime","Review","getMonthLit","currentMonth","month","pre1Month","startOf","pre2Month","setTaskList","monthList","setMonthList","post","status","start","format","end","endOf","then","res","data","code","list","renderCell","date","grade","reduce","total","isBefore","endTime","color","backgroundColor","textAlign","display","justifyContent","marginBottom","Object","keys","map","key","width","height","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Calendar } from 'antd';\nimport moment from 'moment'\n\nimport './index.css'\n\nconst colors = {\n  '-2': '#ff0000',\n  '-1': '#faad14',\n  '0': '#928d8d',\n  '1': '#84e284',\n  '2': '#008000'\n}\n\nconst feel = {\n  '-2': 'sad',\n  '-1': 'normal',\n  '0': 'no task finished',\n  '1': 'good',\n  '2': 'happy'\n}\n\nconst noop = ({ value }) => {\n  const current = value.clone();\n  const localeData = value.localeData();\n  return (\n    <div className='calendar-header'>\n      {localeData.monthsShort(current)}\n    </div>\n  )\n}\n\nconst getDayTask = (day, taskList) => {\n  return taskList.filter(item => day.isSame(item.finshedTime, 'day'))\n}\n\nconst Review = () => {\n  const getMonthLit = () => {\n    const currentMonth = moment().month();\n    const pre1Month = moment().month(currentMonth - 1).startOf('month')\n    const pre2Month = moment().month(currentMonth - 2).startOf('month')\n    return [pre2Month, pre1Month, moment()]\n  }\n\n  const [taskList, setTaskList] = useState([])\n  const [monthList, setMonthList] = useState(getMonthLit())\n\n  useEffect(() => {\n    axios.post('http://localhost:3232/api/task/queryByDate', {\n      status: 'done',\n      start: moment().month(moment().month() - 2).startOf('month').format('YYYY-MM-DD'),\n      end: moment().endOf('month').format('YYYY-MM-DD'),\n    })\n      .then((res) => {\n        if (res.data.code === 200) {\n          setTaskList(res.data.data.list || [])\n        }\n      })\n  }, [])\n\n\n  function renderCell(date) {\n    const grade = getDayTask(date, taskList)\n      .reduce((total, current) =>\n        total + current.feel + moment(current.finshedTime).isBefore(current.endTime) ? 1 : -1, 0)\n    let color = colors[grade]\n    if (grade > 2) {\n      color = colors['2']\n    } else if (grade < -2) {\n      color = colors['-2']\n    }\n\n    return (<div className='calendar-grade' style={{ backgroundColor: color }}></div>)\n  }\n  return (\n    <div>\n            <div style={{\n              textAlign:'center',\n              display:'flex',\n              justifyContent:'center',\n              marginBottom:30\n            }}>\n        {\n          Object.keys(colors).map(key=>(\n            <div>\n              <p style={{\n                backgroundColor:colors[key],\n                width:20,\n                height:20,\n                margin:'0 30px',\n              }}></p>\n              <p>{feel[key]}</p>\n            </div>\n          ))\n        }\n      </div>\n    <div className='site-calendar-demo-card'>\n      <div className='calendar-item'>\n        <Calendar\n          fullscreen={false}\n          defaultValue={monthList[0]}\n          dateFullCellRender={renderCell}\n          headerRender={noop}\n        />\n      </div>\n      <div className='calendar-item'>\n        <Calendar\n          fullscreen={false}\n          defaultValue={monthList[1]}\n          dateFullCellRender={renderCell}\n          headerRender={noop}\n        />\n      </div>\n      <div className='calendar-item'>\n        <Calendar\n          fullscreen={false}\n          defaultValue={monthList[2]}\n          dateFullCellRender={renderCell}\n          headerRender={noop}\n        />\n      </div>\n    </div>\n    </div>\n    )\n}\n\nexport default Review"]},"metadata":{},"sourceType":"module"}